# <type>: Summary, imperative, start upper case, don't end with a period
# No more than 50 chars. #### 50 chars is here:  #
# Types are:
# feat: a new feature is introduced
# fix: a bug fix
# chore: change that does not relate to fix or feat and don't modify the source code or test files
# refactor: refactored code (does not fix code or adds a feature)
# docs: updates the documentation or markdown files
# style: changes the formatting of the code, but not the code itself
# test: includes new tests or correcting previous tests
# perf: code performance changes, not adding new features, not refactoring code
# ci: changes to your continious integration related files
# build: changes that affect the build system or external dependencies
# revert: changes back to a previous commit

# Remember blank line between title and body.

# Body: Explain *what* and *why* (not *how*). Include task ID (ticket number).
# Wrap at 72 chars. ################################## which is here:  #


# At the end: Include Co-authored-by for all contributors. 
# Include at least one empty line before it. Format: 
# Co-authored-by: name <user@users.noreply.github.com>
#
# How to Write a Git Commit Message:
# https://chris.beams.io/posts/git-commit/
#
# 1. Separate subject from body with a blank line
# 2. Limit the subject line to 50 characters
# 3. Capitalize the subject line
# 4. Do not end the subject line with a period
# 5. Use the imperative mood in the subject line
# 6. Wrap the body at 72 characters
# 7. Use the body to explain what and why vs. how
